% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hdMTD_FS.R
\name{hdMTD_FS}
\alias{hdMTD_FS}
\title{The Forward Stepwise method.}
\usage{
hdMTD_FS(X, d, l, A = NULL, elbowTest = FALSE, warning = FALSE, ...)
}
\arguments{
\item{X}{A MTD chain sample.}

\item{d}{An upper bound for the chains order.}

\item{l}{Stop point for FS algorithm.}

\item{A}{The states space. "A" only needs to be informed if X does not already contain all elements of "A".}

\item{elbowTest}{If TRUE, the function will use a special criterion to determine the size of the estimated relevant lag set. See @details.}

\item{warning}{If True may return warnings.}

\item{...}{Used to accommodate any extra arguments passed by the \code{\link[=hdMTD]{hdMTD()}} function.}
}
\value{
Returns a estimated S set of relevant lags.
}
\description{
A function for inference in MTD Markov chains with FS method. It applies the Forward Stepwise (FS) algorithm to estimate a relevant lags set \eqn{\Lambda} for MTD models.
}
\details{
The "Forward Stepwise" (FS) algorithm is the first step of the "Forward Stepwise and Cut" (FSC) algorithm for inference in
Mixture Transition Distribution (MTD) models. Which consists in the application of the "Forward Stepwise" (FS) step followed by the CUT algorithm.
This method and its steps where developed by \href{https://arxiv.org/abs/2202.08007}{Ost and Takahashi} and are specially useful for inference in high-order MTD Markov chains.
This specific function will only apply the FS step of the algorithm and return an estimated relevant lag set of size l.

If the algorithm determines that there are multiple lags equally important and more important than all others, it will sample one of them uniformly.

If the elboTest parameter is TRUE the function will have a new criterion to determine the size of the estimated relevant lag set. Let S be the estimated lag set,
the function includes an element in S if it has the highest \eqn{\nu} among the others. If elbowTest=TRUE, the function will store a vector of these \eqn{max(\nu)}
values for each lag inserted in S. It will then look at this vector, find the lag that was inserted before the one with the smallest \eqn{max(\nu)}, and remove
all lags that were included in S from that lag onwards.
}
\examples{
X <- perfectSample(MTDmodel(Lambda=c(2,4),A=c(0,1),lam0=0.05),2000)
hdMTD_FS(X,A=c(0,1),d=5,l=2)
hdMTD_FS(X,d=5,l=2)
hdMTD_FS(X,d=4,l=3,elbowTest = TRUE)

}
