% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hdMTD_BIC.R
\name{hdMTD_BIC}
\alias{hdMTD_BIC}
\title{The Bayesian Information Criterion (BIC) method for inference in MTD models}
\usage{
hdMTD_BIC(
  X,
  d,
  S = 1:d,
  minl = 1,
  maxl = max(S),
  xi = 1/2,
  A = NULL,
  byl = FALSE,
  BICvalue = FALSE,
  warning = FALSE,
  ...
)
}
\arguments{
\item{X}{A vector or single-column data frame containing a chain sample.}

\item{d}{A positive integer representing an upper bound for the chain order.}

\item{S}{A numeric vector of positive integers from which this function will select
a set of relevant lags. Typically, \code{S} is a subset of \code{1:d}. If \code{S}
is not provided, by default \code{S=1:d}.}

\item{minl}{A positive integer. \code{minl} represents the smallest size of any relevant lag
set this function might return. If \code{minl == maxl}, this function will return exactly
\code{minl} lags in its output, specifically the subset of \code{S} with \code{minl} elements
that has the smallest BIC. If \code{minl < maxl}, the function will consider subsets ranging
from size \code{minl} to size \code{maxl} when searching for the subset of \code{S} with
the smallest BIC.}

\item{maxl}{A positive integer equal to or greater than \code{minl} but less than the number
of elements in \code{S} (\code{maxl = length(S)} is accepted but in this case the output will
always be \code{S}). \code{maxl} represents the largest size of any relevant lag set this
function might return.}

\item{xi}{The BIC penalization term constant. Defaulted to 1/2. A smaller \code{xi} \verb{(near 0)}
reduces the impact of overparameterization.}

\item{A}{A vector with positive integers representing the state space. If not informed,
this function will set \code{A=unique(X)}.}

\item{byl}{Logical. If \code{TRUE}, the function will look for the set with smallest BIC by each
size (from  \code{minl} to \code{maxl}), and return the set with smallest BIC for each size.
If \code{minl==maxl} setting \code{byl=TRUE} or \code{FALSE} makes no difference, since the
function will only calculate the BIC for sets with \code{maxl} elements in the relevant lag set.}

\item{BICvalue}{Logical. If \code{TRUE}, the function will also return the calculated values of
the BIC for the estimated relevant lag sets.}

\item{warning}{Logical. If \code{TRUE}, informs the user if the state space was set as \code{A=unique(X)}.}

\item{...}{Other parameters. This is used to accommodate any additional argument passed
to \code{\link[=hdMTD_BIC]{hdMTD_BIC()}} through the \code{\link[=hdMTD]{hdMTD()}} function.}
}
\value{
Returns a vector with the estimated relevant lag set using BIC. It might return more
than one set if \code{minl < maxl} and \code{byl = TRUE}. Additionally, it can return the value
of the penalized likelihood for the outputted lag sets if \code{BICvalue = TRUE}.
}
\description{
A function for estimating the relevant lag set \eqn{\Lambda} of a Markov chains using
Bayesian Information Criterion (BIC). This means that this method selects the set of lags
that minimizes a penalized log likelihood for a given sample.
}
\details{
Note that the upper bound for the order of the chain \code{d} affects the estimation of
the transition probabilities. If we run the function with a certain order parameter \code{d},
only the sequences of size \code{d} that appeared in the sample will be counted. Therefore all
transition probabilities, and hence all BIC values, will be calculated with respect to that
\code{d}. If we use another value for \code{d} to run the function, even if the output
agrees with the one of the previous run, it's BIC value might change a little.

Note that the upper bound for the order of the chain (\code{d}) affects the estimation
of the transition probabilities. If we run the function with a certain order parameter \code{d},
only the sequences of size \code{d} that appeared in the sample will be counted. Therefore,
all transition probabilities, and hence all BIC values, will be calculated with respect to
that \code{d}. If we use another value for \code{d} to run the function, even if the output
agrees with that of the previous run, its BIC value might change slightly.
}
\examples{
X <- testChains[,1]
hdMTD_BIC (X,d=6,minl=1,maxl=1)
hdMTD_BIC (X,d=3,minl=1,maxl=2,BICvalue = TRUE)

}
